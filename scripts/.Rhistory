X <- resultX[c.ite] <- GetFreq(pop, chrom="X", allele = 2,
females=females, males=males[i])
#Males
p2 <- (1-X) * Y
q2 <- X * (1-Y)
wMal[c.ite] <- ((p2 * (1+s[m])) + (((X * Y) + ((1-X) * (1-Y))) * (1 + (h[k]*s[m]))) + (q2 * 1))
#Females
p <- X #p is allele 2, beneficial for females #x chr table data is for female ben. allele
q <- 1 - p
wFem[c.ite] <- ((p^2 * (1+s[m])) + (2*p*q * (1+((1-h[k])*s[m]))) + (q^2 *1))
#Diff
wDiff[c.ite] <- wMal[c.ite] - wFem[c.ite]
pop <- Generation(pop, females=females, males=males[i],
rd=rd[j], h=h[k], s=s[m])
# this checks to see if we have run gens generations
if(c.ite == gens){
segregating <- F
}
print(c.ite)
}
} else { #auto
pop <- makeGenomes(females, males,
freqs = c(rep(females/4, 4),
rep(males[i]/4, 4)))
segregating <- T
c.ite <- 0
while(segregating){
# this gets the allele frequencies we are interested in
c.ite <- c.ite + 1
A <- resultA[c.ite] <- GetFreq(pop, chrom="A", allele = 1,
females=females, males=males[i])
p <- A #p is allele 1, 1 is beneficial for males
q <- 1 - p #q is allele 2, 2 is beneficial for females
# todo add fitness to below
wMal[c.ite] <- ((p^2 * (1+s[m]))  + (2*p*q * (1+h[k]*s[m])) + (q^2 * 1)) #/(1+x[8]) #dividing at the end by 1+s to put it between 0 and 1
wFem[c.ite]<- (p^2 * (1)) + (2*p*q * (1+((1-h[k])*s[m]))) + (q^2 * (1+s[m])) #already on 0-1 scale
wDiff[c.ite] <- wMal[c.ite] - wFem[c.ite]
# this runs a generation of the simulation
pop <- Generation(pop, females=females, males=males[i],
rd=rd[j], h=h[k], s=s[m])
# this checks to see if we have run gens generations
if(c.ite == gens){
segregating <- F
}
print(c.ite)
}
}
plot(resultX)
plot(resultY)
plot(wDiff)
if(j == 1){ # sex
pop <- makeGenomes(females, males,
freqs = c(rep(females/4, 4),
rep(males[i]/4, 4)))
segregating <- T
c.ite <- 0
while(segregating){
# this gets the allele frequencies we are interested in
c.ite <- c.ite + 1
Y <- resultY[c.ite] <- GetFreq(pop, chrom="Y", allele = 1,
females=females, males=males[i])
X <- resultX[c.ite] <- GetFreq(pop, chrom="X", allele = 2,
females=females, males=males[i])
#Males
p2 <- (1-X) * Y
q2 <- X * (1-Y)
wMal[c.ite] <- ((p2 * (1+s[m])) + (((X * Y) + ((1-X) * (1-Y))) * (1 + (h[k]*s[m]))) + (q2 * 1))
#Females
p <- X #p is allele 2, beneficial for females #x chr table data is for female ben. allele
q <- 1 - p
wFem[c.ite] <- ((p^2 * (1+s[m])) + (2*p*q * (1+((1-h[k])*s[m]))) + (q^2 *1))
#Diff
wDiff[c.ite] <- wMal[c.ite] - wFem[c.ite]
pop <- Generation(pop, females=females, males=males[i],
rd=rd[j], h=h[k], s=s[m])
# this checks to see if we have run gens generations
if(c.ite == gens){
segregating <- F
}
print(c.ite)
}
} else { #auto
pop <- makeGenomes(females, males,
freqs = c(rep(females/4, 4),
rep(males[i]/4, 4)))
segregating <- T
c.ite <- 0
while(segregating){
# this gets the allele frequencies we are interested in
c.ite <- c.ite + 1
A <- resultA[c.ite] <- GetFreq(pop, chrom="A", allele = 1,
females=females, males=males[i])
p <- A #p is allele 1, 1 is beneficial for males
q <- 1 - p #q is allele 2, 2 is beneficial for females
# todo add fitness to below
wMal[c.ite] <- ((p^2 * (1+s[m]))  + (2*p*q * (1+h[k]*s[m])) + (q^2 * 1)) #/(1+x[8]) #dividing at the end by 1+s to put it between 0 and 1
wFem[c.ite]<- (p^2 * (1)) + (2*p*q * (1+((1-h[k])*s[m]))) + (q^2 * (1+s[m])) #already on 0-1 scale
wDiff[c.ite] <- wMal[c.ite] - wFem[c.ite]
# this runs a generation of the simulation
pop <- Generation(pop, females=females, males=males[i],
rd=rd[j], h=h[k], s=s[m])
# this checks to see if we have run gens generations
if(c.ite == gens){
segregating <- F
}
print(c.ite)
}
}
plot(resultX)
plot(resultY)
plot(wDiff)
j
j = 2
if(j == 1){ # sex
pop <- makeGenomes(females, males,
freqs = c(rep(females/4, 4),
rep(males[i]/4, 4)))
segregating <- T
c.ite <- 0
while(segregating){
# this gets the allele frequencies we are interested in
c.ite <- c.ite + 1
Y <- resultY[c.ite] <- GetFreq(pop, chrom="Y", allele = 1,
females=females, males=males[i])
X <- resultX[c.ite] <- GetFreq(pop, chrom="X", allele = 2,
females=females, males=males[i])
#Males
p2 <- (1-X) * Y
q2 <- X * (1-Y)
wMal[c.ite] <- ((p2 * (1+s[m])) + (((X * Y) + ((1-X) * (1-Y))) * (1 + (h[k]*s[m]))) + (q2 * 1))
#Females
p <- X #p is allele 2, beneficial for females #x chr table data is for female ben. allele
q <- 1 - p
wFem[c.ite] <- ((p^2 * (1+s[m])) + (2*p*q * (1+((1-h[k])*s[m]))) + (q^2 *1))
#Diff
wDiff[c.ite] <- wMal[c.ite] - wFem[c.ite]
pop <- Generation(pop, females=females, males=males[i],
rd=rd[j], h=h[k], s=s[m])
# this checks to see if we have run gens generations
if(c.ite == gens){
segregating <- F
}
print(c.ite)
}
} else { #auto
pop <- makeGenomes(females, males,
freqs = c(rep(females/4, 4),
rep(males[i]/4, 4)))
segregating <- T
c.ite <- 0
while(segregating){
# this gets the allele frequencies we are interested in
c.ite <- c.ite + 1
A <- resultA[c.ite] <- GetFreq(pop, chrom="A", allele = 1,
females=females, males=males[i])
p <- A #p is allele 1, 1 is beneficial for males
q <- 1 - p #q is allele 2, 2 is beneficial for females
# todo add fitness to below
wMal[c.ite] <- ((p^2 * (1+s[m]))  + (2*p*q * (1+h[k]*s[m])) + (q^2 * 1)) #/(1+x[8]) #dividing at the end by 1+s to put it between 0 and 1
wFem[c.ite]<- (p^2 * (1)) + (2*p*q * (1+((1-h[k])*s[m]))) + (q^2 * (1+s[m])) #already on 0-1 scale
wDiff[c.ite] <- wMal[c.ite] - wFem[c.ite]
# this runs a generation of the simulation
pop <- Generation(pop, females=females, males=males[i],
rd=rd[j], h=h[k], s=s[m])
# this checks to see if we have run gens generations
if(c.ite == gens){
segregating <- F
}
print(c.ite)
}
}
plot(resultX)
plot(resultY)
plot(wDiff)
plot(resultA)
plot(wDiff)
plot(resultA)
rd[j]
# this sets up the contain for a given sim
resultY <- resultX <- resultA <- c()
wFem <- wMal <- wDiff <- c()
if(j == 1){ # sex
pop <- makeGenomes(females, males,
freqs = c(rep(females/4, 4),
rep(males[i]/4, 4)))
segregating <- T
c.ite <- 0
while(segregating){
# this gets the allele frequencies we are interested in
c.ite <- c.ite + 1
Y <- resultY[c.ite] <- GetFreq(pop, chrom="Y", allele = 1,
females=females, males=males[i])
X <- resultX[c.ite] <- GetFreq(pop, chrom="X", allele = 2,
females=females, males=males[i])
#Males
p2 <- (1-X) * Y
q2 <- X * (1-Y)
wMal[c.ite] <- ((p2 * (1+s[m])) + (((X * Y) + ((1-X) * (1-Y))) * (1 + (h[k]*s[m]))) + (q2 * 1))
#Females
p <- X #p is allele 2, beneficial for females #x chr table data is for female ben. allele
q <- 1 - p
wFem[c.ite] <- ((p^2 * (1+s[m])) + (2*p*q * (1+((1-h[k])*s[m]))) + (q^2 *1))
#Diff
wDiff[c.ite] <- wMal[c.ite] - wFem[c.ite]
pop <- Generation(pop, females=females, males=males[i],
rd=rd[j], h=h[k], s=s[m])
# this checks to see if we have run gens generations
if(c.ite == gens){
segregating <- F
}
print(c.ite)
}
} else { #auto
pop <- makeGenomes(females, males,
freqs = c(rep(females/4, 4),
rep(males[i]/4, 4)))
segregating <- T
c.ite <- 0
while(segregating){
# this gets the allele frequencies we are interested in
c.ite <- c.ite + 1
A <- resultA[c.ite] <- GetFreq(pop, chrom="A", allele = 1,
females=females, males=males[i])
p <- A #p is allele 1, 1 is beneficial for males
q <- 1 - p #q is allele 2, 2 is beneficial for females
# todo add fitness to below
wMal[c.ite] <- ((p^2 * (1+s[m]))  + (2*p*q * (1+h[k]*s[m])) + (q^2 * 1)) #/(1+x[8]) #dividing at the end by 1+s to put it between 0 and 1
wFem[c.ite]<- (p^2 * (1)) + (2*p*q * (1+((1-h[k])*s[m]))) + (q^2 * (1+s[m])) #already on 0-1 scale
wDiff[c.ite] <- wMal[c.ite] - wFem[c.ite]
# this runs a generation of the simulation
pop <- Generation(pop, females=females, males=males[i],
rd=rd[j], h=h[k], s=s[m])
# this checks to see if we have run gens generations
if(c.ite == gens){
segregating <- F
}
print(c.ite)
}
}
plot(resultA)
plot(wDiff)
if(j == 1){ # sex
pop <- makeGenomes(females, males,
freqs = c(rep(females/4, 4),
rep(males[i]/4, 4)))
segregating <- T
c.ite <- 0
while(segregating){
# this gets the allele frequencies we are interested in
c.ite <- c.ite + 1
Y <- resultY[c.ite] <- GetFreq(pop, chrom="Y", allele = 1,
females=females, males=males[i])
X <- resultX[c.ite] <- GetFreq(pop, chrom="X", allele = 2,
females=females, males=males[i])
#Males
p2 <- (1-X) * Y
q2 <- X * (1-Y)
wMal[c.ite] <- ((p2 * (1+s[m])) + (((X * Y) + ((1-X) * (1-Y))) * (1 + (h[k]*s[m]))) + (q2 * 1))
#Females
p <- X #p is allele 2, beneficial for females #x chr table data is for female ben. allele
q <- 1 - p
wFem[c.ite] <- ((p^2 * (1+s[m])) + (2*p*q * (1+((1-h[k])*s[m]))) + (q^2 *1))
#Diff
wDiff[c.ite] <- wMal[c.ite] - wFem[c.ite]
pop <- Generation(pop, females=females, males=males[i],
rd=rd[j], h=h[k], s=s[m])
# this checks to see if we have run gens generations
if(c.ite == gens){
segregating <- F
}
print(c.ite)
}
plot(resultX)
plot(resultY)
plot(wDiff)
} else { #auto
pop <- makeGenomes(females, males,
freqs = c(rep(females/4, 4),
rep(males[i]/4, 4)))
segregating <- T
c.ite <- 0
while(segregating){
# this gets the allele frequencies we are interested in
c.ite <- c.ite + 1
A <- resultA[c.ite] <- GetFreq(pop, chrom="A", allele = 1,
females=females, males=males[i])
p <- A #p is allele 1, 1 is beneficial for males
q <- 1 - p #q is allele 2, 2 is beneficial for females
# todo add fitness to below
wMal[c.ite] <- ((p^2 * (1+s[m]))  + (2*p*q * (1+h[k]*s[m])) + (q^2 * 1)) #/(1+x[8]) #dividing at the end by 1+s to put it between 0 and 1
wFem[c.ite]<- (p^2 * (1)) + (2*p*q * (1+((1-h[k])*s[m]))) + (q^2 * (1+s[m])) #already on 0-1 scale
wDiff[c.ite] <- wMal[c.ite] - wFem[c.ite]
# this runs a generation of the simulation
pop <- Generation(pop, females=females, males=males[i],
rd=rd[j], h=h[k], s=s[m])
# this checks to see if we have run gens generations
if(c.ite == gens){
segregating <- F
}
print(c.ite)
}
plot(resultA)
plot(wDiff)
}
j
j = 1
if(j == 1){ # sex
pop <- makeGenomes(females, males,
freqs = c(rep(females/4, 4),
rep(males[i]/4, 4)))
segregating <- T
c.ite <- 0
while(segregating){
# this gets the allele frequencies we are interested in
c.ite <- c.ite + 1
Y <- resultY[c.ite] <- GetFreq(pop, chrom="Y", allele = 1,
females=females, males=males[i])
X <- resultX[c.ite] <- GetFreq(pop, chrom="X", allele = 2,
females=females, males=males[i])
#Males
p2 <- (1-X) * Y
q2 <- X * (1-Y)
wMal[c.ite] <- ((p2 * (1+s[m])) + (((X * Y) + ((1-X) * (1-Y))) * (1 + (h[k]*s[m]))) + (q2 * 1))
#Females
p <- X #p is allele 2, beneficial for females #x chr table data is for female ben. allele
q <- 1 - p
wFem[c.ite] <- ((p^2 * (1+s[m])) + (2*p*q * (1+((1-h[k])*s[m]))) + (q^2 *1))
#Diff
wDiff[c.ite] <- wMal[c.ite] - wFem[c.ite]
pop <- Generation(pop, females=females, males=males[i],
rd=rd[j], h=h[k], s=s[m])
# this checks to see if we have run gens generations
if(c.ite == gens){
segregating <- F
}
print(c.ite)
}
plot(resultX)
plot(resultY)
plot(wDiff)
} else { #auto
pop <- makeGenomes(females, males,
freqs = c(rep(females/4, 4),
rep(males[i]/4, 4)))
segregating <- T
c.ite <- 0
while(segregating){
# this gets the allele frequencies we are interested in
c.ite <- c.ite + 1
A <- resultA[c.ite] <- GetFreq(pop, chrom="A", allele = 1,
females=females, males=males[i])
p <- A #p is allele 1, 1 is beneficial for males
q <- 1 - p #q is allele 2, 2 is beneficial for females
# todo add fitness to below
wMal[c.ite] <- ((p^2 * (1+s[m]))  + (2*p*q * (1+h[k]*s[m])) + (q^2 * 1)) #/(1+x[8]) #dividing at the end by 1+s to put it between 0 and 1
wFem[c.ite]<- (p^2 * (1)) + (2*p*q * (1+((1-h[k])*s[m]))) + (q^2 * (1+s[m])) #already on 0-1 scale
wDiff[c.ite] <- wMal[c.ite] - wFem[c.ite]
# this runs a generation of the simulation
pop <- Generation(pop, females=females, males=males[i],
rd=rd[j], h=h[k], s=s[m])
# this checks to see if we have run gens generations
if(c.ite == gens){
segregating <- F
}
print(c.ite)
}
plot(resultA)
plot(wDiff)
}
males
i
i = 1
females <- ceiling(males[i]*bias[ii]) #Let's get rid of females.each
#In the most extreme case with highest bias, adjusted for ease of calculations
if (females < 4){
females <- 4
}
# this sets up the contain for a given sim
resultY <- resultX <- resultA <- c()
wFem <- wMal <- wDiff <- c()
if(j == 1){ # sex
pop <- makeGenomes(females, males,
freqs = c(rep(females/4, 4),
rep(males[i]/4, 4)))
segregating <- T
c.ite <- 0
while(segregating){
# this gets the allele frequencies we are interested in
c.ite <- c.ite + 1
Y <- resultY[c.ite] <- GetFreq(pop, chrom="Y", allele = 1,
females=females, males=males[i])
X <- resultX[c.ite] <- GetFreq(pop, chrom="X", allele = 2,
females=females, males=males[i])
#Males
p2 <- (1-X) * Y
q2 <- X * (1-Y)
wMal[c.ite] <- ((p2 * (1+s[m])) + (((X * Y) + ((1-X) * (1-Y))) * (1 + (h[k]*s[m]))) + (q2 * 1))
#Females
p <- X #p is allele 2, beneficial for females #x chr table data is for female ben. allele
q <- 1 - p
wFem[c.ite] <- ((p^2 * (1+s[m])) + (2*p*q * (1+((1-h[k])*s[m]))) + (q^2 *1))
#Diff
wDiff[c.ite] <- wMal[c.ite] - wFem[c.ite]
pop <- Generation(pop, females=females, males=males[i],
rd=rd[j], h=h[k], s=s[m])
# this checks to see if we have run gens generations
if(c.ite == gens){
segregating <- F
}
print(c.ite)
}
plot(resultX)
plot(resultY)
plot(wDiff)
} else { #auto
pop <- makeGenomes(females, males,
freqs = c(rep(females/4, 4),
rep(males[i]/4, 4)))
segregating <- T
c.ite <- 0
while(segregating){
# this gets the allele frequencies we are interested in
c.ite <- c.ite + 1
A <- resultA[c.ite] <- GetFreq(pop, chrom="A", allele = 1,
females=females, males=males[i])
p <- A #p is allele 1, 1 is beneficial for males
q <- 1 - p #q is allele 2, 2 is beneficial for females
# todo add fitness to below
wMal[c.ite] <- ((p^2 * (1+s[m]))  + (2*p*q * (1+h[k]*s[m])) + (q^2 * 1)) #/(1+x[8]) #dividing at the end by 1+s to put it between 0 and 1
wFem[c.ite]<- (p^2 * (1)) + (2*p*q * (1+((1-h[k])*s[m]))) + (q^2 * (1+s[m])) #already on 0-1 scale
wDiff[c.ite] <- wMal[c.ite] - wFem[c.ite]
# this runs a generation of the simulation
pop <- Generation(pop, females=females, males=males[i],
rd=rd[j], h=h[k], s=s[m])
# this checks to see if we have run gens generations
if(c.ite == gens){
segregating <- F
}
print(c.ite)
}
plot(resultA)
plot(wDiff)
}
if(j == 1){ # sex
pop <- makeGenomes(females, males,
freqs = c(rep(females/4, 4),
rep(males[i]/4, 4)))
segregating <- T
c.ite <- 0
while(segregating){
# this gets the allele frequencies we are interested in
c.ite <- c.ite + 1
Y <- resultY[c.ite] <- GetFreq(pop, chrom="Y", allele = 1,
females=females, males=males[i])
X <- resultX[c.ite] <- GetFreq(pop, chrom="X", allele = 2,
females=females, males=males[i])
#Males
p2 <- (1-X) * Y
q2 <- X * (1-Y)
wMal[c.ite] <- ((p2 * (1+s[m])) + (((X * Y) + ((1-X) * (1-Y))) * (1 + (h[k]*s[m]))) + (q2 * 1))
#Females
p <- X #p is allele 2, beneficial for females #x chr table data is for female ben. allele
q <- 1 - p
wFem[c.ite] <- ((p^2 * (1+s[m])) + (2*p*q * (1+((1-h[k])*s[m]))) + (q^2 *1))
#Diff
wDiff[c.ite] <- wMal[c.ite] - wFem[c.ite]
pop <- Generation(pop, females=females, males=males[i],
rd=rd[j], h=h[k], s=s[m])
# this checks to see if we have run gens generations
if(c.ite == gens){
segregating <- F
}
print(c.ite)
}
plot(resultX)
plot(resultY)
plot(wDiff)
} else { #auto
pop <- makeGenomes(females, males,
freqs = c(rep(females/4, 4),
rep(males[i]/4, 4)))
segregating <- T
c.ite <- 0
while(segregating){
# this gets the allele frequencies we are interested in
c.ite <- c.ite + 1
A <- resultA[c.ite] <- GetFreq(pop, chrom="A", allele = 1,
females=females, males=males[i])
p <- A #p is allele 1, 1 is beneficial for males
q <- 1 - p #q is allele 2, 2 is beneficial for females
# todo add fitness to below
wMal[c.ite] <- ((p^2 * (1+s[m]))  + (2*p*q * (1+h[k]*s[m])) + (q^2 * 1)) #/(1+x[8]) #dividing at the end by 1+s to put it between 0 and 1
wFem[c.ite]<- (p^2 * (1)) + (2*p*q * (1+((1-h[k])*s[m]))) + (q^2 * (1+s[m])) #already on 0-1 scale
wDiff[c.ite] <- wMal[c.ite] - wFem[c.ite]
# this runs a generation of the simulation
pop <- Generation(pop, females=females, males=males[i],
rd=rd[j], h=h[k], s=s[m])
# this checks to see if we have run gens generations
if(c.ite == gens){
segregating <- F
}
print(c.ite)
}
plot(resultA)
plot(wDiff)
}
plot(resultX)
j
Y
runApp('theoretical')
runApp('C:/Users/pdglenn/OneDrive/TAMU/OSR/ShinyOSRx')
runApp('theoretical')
